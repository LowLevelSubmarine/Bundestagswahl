name: Kotlin/npm CI with Gradle/npm

on:
  create:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install Zip
      run: sudo apt-get install -y zip
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Get Tag
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
    - name: Boot Jar
      run: ./gradlew bootJar
    - name: Build NPM
      run: cd frontend && npm run cd-zip && cd ..
    - name: Set jarFile
      run: echo "JARFILE=$(ls ./backend/build/libs/*.jar| head -1)" >> $GITHUB_ENV
    - name: debug
      run: echo "env.$VERSION env.$JARFILE"
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.RELEASE_VERSION }}
        release_name: Version ${{ env.RELEASE_VERSION }}
        body: "Auto generated release: ${{ env.RELEASE_VERSION }}"
        draft: false
        prerelease: true
    - name: Generate Backend Name
      run: echo "NAME_BACKEND=$(echo bundestagswahl-backend-$VERSION.jar)" >> $GITHUB_ENV
    - name: Upload Backend Jar
      id: upload-backend-jar
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ${{ env.JARFILE }}
        asset_name: ${{ env.NAME_BACKEND }}
        asset_content_type: application/java-archive
    - name: Generate Frontend Name
      run: echo "NAME_FRONTEND=$(echo bundestagswahl-backend-$VERSION.jar)" >> $GITHUB_ENV
    - name: Upload Frontend Zip
      id: upload-frontend-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: "frontend/frontend.zip"
        asset_name: ${{ env.NAME_FRONTEND }}
        asset_content_type: application/zip
